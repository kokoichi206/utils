name: Version check

on:
  workflow_call:

# バージョン値はapp/build.gradleに以下の形式で記述されていること
# def versionMajor = 1
# def versionMinor = 0
# def versionPatch = 1
jobs:
  # exit 1 if version is NOT updated.
  version-checker:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # 0 means all branches

      - name: Get version of BASE_REF
        id: version-base-ref
        run: |
          git checkout ${GITHUB_BASE_REF}
          # check the file
          FILE="app/build.gradle"
          while read line
          do
            if [[ "$line" =~ "def versionMajor"([ ]*)=([ ]*)([0-9]*) ]]; then
              MAJOR="${BASH_REMATCH[3]}"
            elif [[ "$line" =~ "def versionMinor"([ ]*)=([ ]*)([0-9]*) ]]; then
              MINOR="${BASH_REMATCH[3]}"
            elif [[ "$line" =~ "def versionPatch"([ ]*)=([ ]*)([0-9]*) ]]; then
              PATCH="${BASH_REMATCH[3]}"
            fi
          done < "$FILE"
          if [ -z "$MAJOR" ] || [ -z "$MINOR" ] || [ -z "$PATCH" ]; then
            exit 1
          fi
          echo "::set-output name=version::$(echo ${MAJOR}.${MINOR}.${PATCH})"
      - name: Get version of HEAD_REF
        id: version-head-ref
        run: |
          git checkout ${GITHUB_HEAD_REF}
          # check the file
          FILE="app/build.gradle"
          while read line
          do
            if [[ "$line" =~ "def versionMajor"([ ]*)=([ ]*)([0-9]*) ]]; then
              MAJOR="${BASH_REMATCH[3]}"
            elif [[ "$line" =~ "def versionMinor"([ ]*)=([ ]*)([0-9]*) ]]; then
              MINOR="${BASH_REMATCH[3]}"
            elif [[ "$line" =~ "def versionPatch"([ ]*)=([ ]*)([0-9]*) ]]; then
              PATCH="${BASH_REMATCH[3]}"
            fi
          done < "$FILE"
          if [ -z "$MAJOR" ] || [ -z "$MINOR" ] || [ -z "$PATCH" ]; then
            exit 1
          fi
          echo "::set-output name=version::$(echo ${MAJOR}.${MINOR}.${PATCH})"
      - name: Check whether version is updated
        run: |
          base="${{ steps.version-base-ref.outputs.version }}"
          head="${{ steps.version-head-ref.outputs.version }}"
          if [[ "$base" == "$head" ]]; then
            echo "Version is not updated!"
            exit 1
          fi
